
struct vec3
{
	def x = 0;
	def y = 0;
	def z = 0;
	vec3(x1, y1, z1)
	{
		x = x1;
		y = y1;
		z = z1;
	}
	vec3(x1){
		x = x1;
		y = x1;
		z = x1;
	}

}

fn vector_subtract(a, b)
{
	return vec3(a.x - b.x, a.y - b.y, a.z - b.z);
}
fn mag_sq(vector)
{
	return (vector.x * vector.x) + (vector.y * vector.y) + (vector.z * vector.z);
}
fn get_ent_diff(self, target)
{
	return vector_subtract(target, self);
}

fn main()
{
	def ent_positions = [ vec3(256, 1024, 512), vec3(-214, 2902, 203), vec3(420, 394, -1290) ];
	def self = vec3(400, 500, 600);
	def sum = 0;

	for(def i = 0; i < 3; ++i){
		sum = sum + mag_sq(get_ent_diff(self, ent_positions[i]));
	}

	def average_diff = sum / 3;


}